/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import java.awt.Component;
import javaClass.Prescription;
import javaClass.User;
import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Sheng
 */
public class SearchDiseasePatient extends javax.swing.JFrame {

    /**
     * Creates new form SearchDieseasePatient
     */
    private User user;
    DefaultTableModel model;
    private String userid = "";
    
    public SearchDiseasePatient() {
        initComponents();
    }
    
    public SearchDiseasePatient(User user) throws SQLException
    {
        initComponents();
        this.user = user;
        userid = user.getUserid();
        createColumns();
        show_patient();
        JTableHeader tableHeader = tblDisease.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        setResizable(false);
        image();
        color_table();
        widthTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        findHeader = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        panelBody = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSymptom = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTongueCoating = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtHistory = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtBlood = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtMediName = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtJiliang = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtMediCategory = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtShit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTongueQuality = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisease = new javax.swing.JTable();
        txtReference = new javax.swing.JTextField();
        txtBill = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        panelHeader.setBackground(new java.awt.Color(255, 204, 204));
        panelHeader.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelHeader.setForeground(new java.awt.Color(153, 153, 153));
        panelHeader.setLayout(null);
        panelHeader.add(lbllogo);
        lbllogo.setBounds(14, 2, 231, 70);

        jLabel20.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel20.setText("登入：");
        panelHeader.add(jLabel20);
        jLabel20.setBounds(1670, 5, 75, 60);

        lblName.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        panelHeader.add(lblName);
        lblName.setBounds(1752, 5, 127, 60);

        findHeader.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        findHeader.setText("寻找病人病症");
        panelHeader.add(findHeader);
        findHeader.setBounds(880, 0, 250, 70);

        getContentPane().add(panelHeader);
        panelHeader.setBounds(0, 0, 1940, 70);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel21.setText("CopyRight © Heng Seng Tong");
        jPanel1.add(jLabel21);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 940, 1940, 50);

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setLayout(null);

        jLabel18.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel18.setText("电话号码:");
        panelBody.add(jLabel18);
        jLabel18.setBounds(460, 180, 90, 40);

        txtPhone.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneKeyPressed(evt);
            }
        });
        panelBody.add(txtPhone);
        txtPhone.setBounds(550, 180, 280, 40);

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel1.setText("ID:");
        panelBody.add(jLabel1);
        jLabel1.setBounds(80, 40, 60, 40);

        txtID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });
        panelBody.add(txtID);
        txtID.setBounds(130, 40, 280, 40);

        jLabel4.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel4.setText("姓名:");
        panelBody.add(jLabel4);
        jLabel4.setBounds(80, 110, 60, 40);

        txtName.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        panelBody.add(txtName);
        txtName.setBounds(130, 110, 280, 40);

        jLabel19.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel19.setText("性别:");
        panelBody.add(jLabel19);
        jLabel19.setBounds(80, 180, 50, 40);

        txtGender.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGenderKeyPressed(evt);
            }
        });
        panelBody.add(txtGender);
        txtGender.setBounds(130, 180, 280, 40);

        jLabel5.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel5.setText("主症:");
        panelBody.add(jLabel5);
        jLabel5.setBounds(80, 250, 60, 40);

        txtSymptom.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtSymptom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSymptomKeyPressed(evt);
            }
        });
        panelBody.add(txtSymptom);
        txtSymptom.setBounds(130, 250, 280, 40);

        jLabel7.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel7.setText("脉象:");
        panelBody.add(jLabel7);
        jLabel7.setBounds(80, 320, 50, 40);

        txtPulse.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtPulse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPulseKeyPressed(evt);
            }
        });
        panelBody.add(txtPulse);
        txtPulse.setBounds(130, 320, 280, 40);

        jLabel9.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel9.setText("舌苔:");
        panelBody.add(jLabel9);
        jLabel9.setBounds(80, 390, 50, 40);

        txtTongueCoating.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtTongueCoating.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTongueCoatingKeyPressed(evt);
            }
        });
        panelBody.add(txtTongueCoating);
        txtTongueCoating.setBounds(130, 390, 280, 40);

        jLabel11.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel11.setText("病史:");
        panelBody.add(jLabel11);
        jLabel11.setBounds(80, 460, 50, 40);

        txtHistory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtHistory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHistoryKeyPressed(evt);
            }
        });
        panelBody.add(txtHistory);
        txtHistory.setBounds(130, 460, 280, 40);

        jLabel13.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel13.setText("血压:");
        panelBody.add(jLabel13);
        jLabel13.setBounds(80, 530, 50, 40);

        txtBlood.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtBlood.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBloodKeyPressed(evt);
            }
        });
        panelBody.add(txtBlood);
        txtBlood.setBounds(130, 530, 280, 40);

        jLabel15.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel15.setText("药物名称:");
        panelBody.add(jLabel15);
        jLabel15.setBounds(40, 600, 82, 40);

        txtMediName.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtMediName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMediNameKeyPressed(evt);
            }
        });
        panelBody.add(txtMediName);
        txtMediName.setBounds(130, 600, 280, 40);

        btnBack.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBack.setText("退出");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        panelBody.add(btnBack);
        btnBack.setBounds(60, 730, 120, 50);

        btnFind.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFind.setText("寻找");
        btnFind.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        panelBody.add(btnFind);
        btnFind.setBounds(700, 730, 120, 50);

        jLabel16.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel16.setText("剂量:");
        panelBody.add(jLabel16);
        jLabel16.setBounds(490, 600, 60, 40);

        txtJiliang.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtJiliang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJiliangKeyPressed(evt);
            }
        });
        panelBody.add(txtJiliang);
        txtJiliang.setBounds(550, 600, 280, 40);

        jLabel14.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel14.setText("药物分类:");
        panelBody.add(jLabel14);
        jLabel14.setBounds(460, 530, 90, 40);

        txtMediCategory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtMediCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMediCategoryKeyPressed(evt);
            }
        });
        panelBody.add(txtMediCategory);
        txtMediCategory.setBounds(550, 530, 280, 40);

        jLabel12.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel12.setText("体温:");
        panelBody.add(jLabel12);
        jLabel12.setBounds(490, 460, 60, 40);

        txtTemperature.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtTemperature.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTemperatureKeyPressed(evt);
            }
        });
        panelBody.add(txtTemperature);
        txtTemperature.setBounds(550, 460, 280, 40);

        jLabel10.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel10.setText("大小便:");
        panelBody.add(jLabel10);
        jLabel10.setBounds(480, 390, 70, 40);

        txtShit.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtShit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtShitKeyPressed(evt);
            }
        });
        panelBody.add(txtShit);
        txtShit.setBounds(550, 390, 280, 40);

        jLabel8.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel8.setText("舌质:");
        panelBody.add(jLabel8);
        jLabel8.setBounds(500, 320, 50, 40);

        txtTongueQuality.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtTongueQuality.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTongueQualityKeyPressed(evt);
            }
        });
        panelBody.add(txtTongueQuality);
        txtTongueQuality.setBounds(550, 320, 280, 40);

        jLabel2.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel2.setText("IC:");
        panelBody.add(jLabel2);
        jLabel2.setBounds(510, 40, 40, 40);

        txtIC.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtICKeyPressed(evt);
            }
        });
        panelBody.add(txtIC);
        txtIC.setBounds(550, 40, 280, 40);

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel3.setText("年龄:");
        panelBody.add(jLabel3);
        jLabel3.setBounds(490, 110, 44, 40);

        txtAge.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });
        panelBody.add(txtAge);
        txtAge.setBounds(550, 110, 280, 40);

        jLabel6.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel6.setText("病症分类:");
        panelBody.add(jLabel6);
        jLabel6.setBounds(460, 250, 100, 40);

        txtCategory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCategoryKeyPressed(evt);
            }
        });
        panelBody.add(txtCategory);
        txtCategory.setBounds(550, 250, 280, 40);

        tblDisease.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        tblDisease.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "IC", "病人名字", "性别", "年龄", "电话号码", "地址", "主症", "病症分类", "脉象", "舌质", "舌苔", "大小便", "病史", "体温", "血压", "处方", "药物分类", "参考病症", "药物名称", "剂量", "价格/G", "总价值", "创建时间", "更新时间", "病症ID", "处方ID", "Bill", "最新", "initialweight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDisease.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDisease.setRowHeight(25);
        tblDisease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiseaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisease);

        jScrollPane2.setViewportView(jScrollPane1);

        panelBody.add(jScrollPane2);
        jScrollPane2.setBounds(890, 30, 950, 690);

        txtReference.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtReference.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtReferenceKeyPressed(evt);
            }
        });
        panelBody.add(txtReference);
        txtReference.setBounds(130, 670, 280, 40);

        txtBill.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtBill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBillKeyPressed(evt);
            }
        });
        panelBody.add(txtBill);
        txtBill.setBounds(550, 670, 280, 40);

        jLabel17.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel17.setText("Bill:");
        panelBody.add(jLabel17);
        jLabel17.setBounds(490, 670, 60, 40);

        jLabel22.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel22.setText("参考病症：");
        panelBody.add(jLabel22);
        jLabel22.setBounds(30, 670, 100, 40);

        jPanel4.setBackground(new java.awt.Color(254, 115, 63));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.add(jPanel4);
        jPanel4.setBounds(1370, 760, 30, 30);

        jLabel23.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel23.setText("不能更改资料");
        panelBody.add(jLabel23);
        jLabel23.setBounds(1410, 760, 130, 30);

        jPanel3.setBackground(new java.awt.Color(151, 254, 63));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.add(jPanel3);
        jPanel3.setBounds(1670, 760, 30, 30);

        jLabel24.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel24.setText("可以更改资料");
        panelBody.add(jLabel24);
        jLabel24.setBounds(1710, 760, 130, 30);

        getContentPane().add(panelBody);
        panelBody.setBounds(30, 90, 1870, 830);
        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 2, 2);
        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(930, 110, 160, 150);
        getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(0, 0, 2, 2);

        setBounds(0, 0, 1957, 1036);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        DiseaseMenu menu = new DiseaseMenu(user);
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        try {
            // TODO add your handling code here:
            String ID = txtID.getText();
            show_selected_patients("a.PatientID",ID);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtICKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtICKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String IC = txtIC.getText();
            show_selected_patients("c.IC",IC);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtICKeyPressed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String name = txtName.getText();
            show_selected_patients("c.name",name);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String age = txtAge.getText();
            show_selected_patients("c.age",age);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtCategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCategoryKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String category = txtCategory.getText();
            show_selected_patients("b.Category",category);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtCategoryKeyPressed

    private void txtTongueQualityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTongueQualityKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String tonguequality = txtTongueQuality.getText();
            show_selected_patients("b.TongueQuality",tonguequality);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtTongueQualityKeyPressed

    private void txtShitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtShitKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String shit = txtShit.getText();
            show_selected_patients("b.PeeShit",shit);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtShitKeyPressed

    private void txtTemperatureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperatureKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String temperature = txtTemperature.getText();
            show_selected_patients("b.Temperature",temperature);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtTemperatureKeyPressed

    private void txtSymptomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSymptomKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String symptom = txtSymptom.getText();
            show_selected_patients("b.Symptom",symptom);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtSymptomKeyPressed

    private void txtPulseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPulseKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String pulse = txtPulse.getText();
            show_selected_patients("b.PulseCondition",pulse);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtPulseKeyPressed

    private void txtTongueCoatingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTongueCoatingKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String tonguecoating = txtTongueCoating.getText();
            show_selected_patients("b.TongueCoating",tonguecoating);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtTongueCoatingKeyPressed

    private void txtHistoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHistoryKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String history = txtHistory.getText();
            show_selected_patients("b.History",history);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtHistoryKeyPressed

    private void txtBloodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBloodKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String blood = txtBlood.getText();
            show_selected_patients("b.BloodPressure",blood);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtBloodKeyPressed

    private void txtMediCategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMediCategoryKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String medicategory = txtMediCategory.getText();
            show_selected_patients("a.Category",medicategory);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtMediCategoryKeyPressed

    private void txtMediNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMediNameKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String mediname = txtMediName.getText();
            show_selected_patients("a.Name",mediname);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtMediNameKeyPressed

    private void txtJiliangKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJiliangKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String Jiliang = txtJiliang.getText();
            show_selected_patients("a.Jiliang",Jiliang);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtJiliangKeyPressed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String ID = txtID.getText();
            String IC = txtIC.getText();
            String Name = txtName.getText();
            String Gender = txtGender.getText();
            String Age = txtAge.getText();
            String Phone = txtPhone.getText();
            String Symptom = txtSymptom.getText();
            String Category = txtCategory.getText();
            String Pulse = txtPulse.getText();
            String Quality =txtTongueQuality.getText();
            String Coating = txtTongueCoating.getText();
            String Shit =txtShit.getText();
            String History = txtHistory.getText();
            String Temperature = txtTemperature.getText();
            String Blood = txtBlood.getText();
            String MedicCategory = txtMediCategory.getText();
            String MedicName = txtMediName.getText();
            String Jiliang = txtJiliang.getText();
            
            show_all_disease(ID, IC, Name, Gender, Age,Phone,Symptom,Category,Pulse,Quality,Coating,Shit,History,Temperature,Blood,MedicCategory,MedicName,Jiliang);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "SearchPatient.btnFindActionPerformed get error on line 354, "+ex.getMessage());
        }
          
    }//GEN-LAST:event_btnFindActionPerformed

    private void txtPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String phone = txtPhone.getText();
            show_selected_patients("c.phone",phone);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtPhoneKeyPressed

    private void txtGenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGenderKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String gender = txtGender.getText();
            show_selected_patients("c.gender",gender);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtGenderKeyPressed

    private void tblDiseaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiseaseMouseClicked
        // TODO add your handling code here:
        model = (DefaultTableModel) tblDisease.getModel();
        int index = tblDisease.getSelectedRow();
        TableModel model = tblDisease.getModel();
        int column = tblDisease.getSelectedColumn();
        String ID = model.getValueAt(index, 0).toString();
        String IC = model.getValueAt(index,1).toString();
        String Name = model.getValueAt(index,2).toString();
        String Gender = model.getValueAt(index,3).toString();
        String Age = model.getValueAt(index,4).toString();
        String Phone = model.getValueAt(index,5).toString();
        String Address = model.getValueAt(index,6).toString();
        String Symptom = model.getValueAt(index,7).toString();
        String Category = model.getValueAt(index,8).toString();
        String PulseCondition = model.getValueAt(index,9).toString();
        String TongueQuality = model.getValueAt(index,10).toString();
        String TongueCoating = model.getValueAt(index,11).toString();
        String PeeShit = model.getValueAt(index,12).toString();
        String History = model.getValueAt(index,13).toString();
        String Temperature = model.getValueAt(index,14).toString();
        String BloodPressure = model.getValueAt(index,15).toString();
        String Chufang = model.getValueAt(index,16).toString();
        String CategoryTable = model.getValueAt(index,17).toString();
        String Reference = model.getValueAt(index,18).toString();
        String NameTable = model.getValueAt(index,19).toString();
        String Jiliang = model.getValueAt(index,20).toString();
        String Price = model.getValueAt(index,21).toString();
        String TotalPrice = model.getValueAt(index,22).toString();
        String CreateDateTime = model.getValueAt(index,23).toString();
        String LastUpdateDateTime = model.getValueAt(index,24).toString();
        String DiseaseID = model.getValueAt(index,25).toString();
        String PrescriptionID = model.getValueAt(index,26).toString();
        String bill = model.getValueAt(index,27).toString();
        String latest = model.getValueAt(index,28).toString();
        String initialweight = model.getValueAt(index,29).toString();
        
        int option =8;
        
        if (column >= 0 && column <= 6)
        {
            ModifyPatient patient = new ModifyPatient(user,ID,IC,Name,Gender,Age,Phone,Address,CreateDateTime,LastUpdateDateTime, option);
            patient.setVisible(true);
            this.dispose();
        }
        else if(column >= 7 && column <= 15)
        {
            try {
                ModifyDisease disease = new ModifyDisease(user,ID,IC,Name,Phone,DiseaseID,Symptom,Category,PulseCondition,TongueQuality,TongueCoating,PeeShit,History,Temperature,BloodPressure, "", "", "", "", option);
                disease.setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        else
        {
            try {
                ModifyChuFang chufang = new ModifyChuFang(user,ID,IC,Name,Phone,PrescriptionID,Chufang,CategoryTable, Reference, NameTable,Jiliang,Price,TotalPrice,DiseaseID,initialweight,latest,bill,"","","","",option);
                chufang.setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_tblDiseaseMouseClicked

    private void txtReferenceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReferenceKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String Reference = txtReference.getText();
            show_selected_patients("a.Reference",Reference);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtReferenceKeyPressed

    private void txtBillKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBillKeyPressed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            String bill = txtBill.getText();
            show_selected_patients("b.billNo",bill);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_txtBillKeyPressed

    public void show_selected_patients(String contribute,String detail) throws SQLException{
        model.setRowCount(0);
        Prescription prescription = new Prescription();
        List<Prescription> prescriptionList = new ArrayList<Prescription>();
        prescriptionList = prescription.getPrescriptionDetail(contribute,detail,userid);
        model = (DefaultTableModel)tblDisease.getModel();
        Object row[] = new Object[30];
         for(int i =0; i<prescriptionList.size(); i++)
         {
             row[0] = prescriptionList.get(i).getPatientID();
             row[1] = prescriptionList.get(i).getIC();
             row[2] = prescriptionList.get(i).getName();
             row[3] = prescriptionList.get(i).getGender();
             row[4] = prescriptionList.get(i).getAge();
             row[5] = prescriptionList.get(i).getPhone();
             row[6] = prescriptionList.get(i).getAddress();
             row[7] = prescriptionList.get(i).getSymptom();
             row[8] = prescriptionList.get(i).getCategory();
             row[9] = prescriptionList.get(i).getPulseCondition();
             row[10] = prescriptionList.get(i).getTongueQuality();
             row[11] = prescriptionList.get(i).getTongueCoating();
             row[12] = prescriptionList.get(i).getPeeShit();
             row[13] = prescriptionList.get(i).getHistory();
             row[14] = prescriptionList.get(i).getTemperature();
             row[15] = prescriptionList.get(i).getBloodPressure();
             row[16] = prescriptionList.get(i).getChufang();
             row[17] = prescriptionList.get(i).getCategorytable();
             row[18] = prescriptionList.get(i).getReference();
             row[19] = prescriptionList.get(i).getNametable();
             row[20] = prescriptionList.get(i).getJiliang();
             row[21] = prescriptionList.get(i).getPrice();
             row[22] = prescriptionList.get(i).getTotalprice();
             row[23] = prescriptionList.get(i).getCreateDateTime();
             row[24] = prescriptionList.get(i).getLastUpdateDateTime();
             row[25] = prescriptionList.get(i).getDiseaseID();
             row[26] = prescriptionList.get(i).getPrescriptionID();
             row[27] = prescriptionList.get(i).getBillno();
             row[28] = prescriptionList.get(i).getLatest();
             row[29] = prescriptionList.get(i).getInitialWeight();
             model.addRow(row);
         }
    }
    
    private void createColumns()
    {
        model = (DefaultTableModel) tblDisease.getModel();
        /*model.addColumn("ID");
        model.addColumn("IC");
        model.addColumn("病人名字");
        model.addColumn("性别");
        model.addColumn("年龄");
        model.addColumn("电话号码");
        model.addColumn("地址");
        model.addColumn("主症");
        model.addColumn("病症分类");
        model.addColumn("脉象");
        model.addColumn("舌质");
        model.addColumn("舌苔");
        model.addColumn("大小便");  
        model.addColumn("病史"); 
        model.addColumn("体温"); 
        model.addColumn("血压"); 
        model.addColumn("处方");
        model.addColumn("药物种类");
        model.addColumn("药物名称");
        model.addColumn("剂量");
        model.addColumn("价格/G");
        model.addColumn("总价值");
        model.addColumn("创建时间");
        model.addColumn("更新时间");
        model.addColumn("病症ID");
        model.addColumn("处方ID");*/
    }
    
    public void show_patient() throws SQLException{
         Prescription prescription = new Prescription();
         List<Prescription> prescriptionList = new ArrayList<Prescription>();
         /*if(option == 3)
         {
             patientList = patient.getPatients();
         }
         else
         {*/
             prescriptionList = prescription.getPrescriptions(userid);
         //}
         
         model = (DefaultTableModel)tblDisease.getModel();
         Object row[] = new Object[30];
         for(int i =0; i<prescriptionList.size(); i++)
         {
             row[0] = prescriptionList.get(i).getPatientID();
             row[1] = prescriptionList.get(i).getIC();
             row[2] = prescriptionList.get(i).getName();
             row[3] = prescriptionList.get(i).getGender();
             row[4] = prescriptionList.get(i).getAge();
             row[5] = prescriptionList.get(i).getPhone();
             row[6] = prescriptionList.get(i).getAddress();
             row[7] = prescriptionList.get(i).getSymptom();
             row[8] = prescriptionList.get(i).getCategory();
             row[9] = prescriptionList.get(i).getPulseCondition();
             row[10] = prescriptionList.get(i).getTongueQuality();
             row[11] = prescriptionList.get(i).getTongueCoating();
             row[12] = prescriptionList.get(i).getPeeShit();
             row[13] = prescriptionList.get(i).getHistory();
             row[14] = prescriptionList.get(i).getTemperature();
             row[15] = prescriptionList.get(i).getBloodPressure();
             row[16] = prescriptionList.get(i).getChufang();
             row[17] = prescriptionList.get(i).getCategorytable();
             row[18] = prescriptionList.get(i).getReference();
             row[19] = prescriptionList.get(i).getNametable();
             row[20] = prescriptionList.get(i).getJiliang();
             row[21] = prescriptionList.get(i).getPrice();
             row[22] = prescriptionList.get(i).getTotalprice();
             row[23] = prescriptionList.get(i).getCreateDateTime();
             row[24] = prescriptionList.get(i).getLastUpdateDateTime();
             row[25] = prescriptionList.get(i).getDiseaseID();
             row[26] = prescriptionList.get(i).getPrescriptionID();
             row[27] = prescriptionList.get(i).getBillno();
             row[28] = prescriptionList.get(i).getLatest();
             row[29] = prescriptionList.get(i).getInitialWeight();
             model.addRow(row);
         }
    }
    
    public void show_all_disease(String ID, String IC, String Name, String Gender, String Age, String Phone, String Symptom,
            String Category, String Pulse, String Quality, String Coating, String Shit, String History, String Temperature,
            String Blood, String MedicCategory, String MedicName, String Jiliang) throws SQLException{
        model.setRowCount(0);
        Prescription prescription = new Prescription();
        List<Prescription> prescriptionList = new ArrayList<Prescription>();
        prescriptionList = prescription.getAllDetail(ID, IC, Name, Gender ,Age ,Phone,Symptom,Category,Pulse,Quality,Coating,Shit,History,Temperature,Blood,MedicCategory,MedicName,Jiliang,userid);
        model = (DefaultTableModel)tblDisease.getModel();
        Object row[] = new Object[30];
         for(int i =0; i<prescriptionList.size(); i++)
         {
             row[0] = prescriptionList.get(i).getPatientID();
             row[1] = prescriptionList.get(i).getIC();
             row[2] = prescriptionList.get(i).getName();
             row[3] = prescriptionList.get(i).getGender();
             row[4] = prescriptionList.get(i).getAge();
             row[5] = prescriptionList.get(i).getPhone();
             row[6] = prescriptionList.get(i).getAddress();
             row[7] = prescriptionList.get(i).getSymptom();
             row[8] = prescriptionList.get(i).getCategory();
             row[9] = prescriptionList.get(i).getPulseCondition();
             row[10] = prescriptionList.get(i).getTongueQuality();
             row[11] = prescriptionList.get(i).getTongueCoating();
             row[12] = prescriptionList.get(i).getPeeShit();
             row[13] = prescriptionList.get(i).getHistory();
             row[14] = prescriptionList.get(i).getTemperature();
             row[15] = prescriptionList.get(i).getBloodPressure();
             row[16] = prescriptionList.get(i).getChufang();
             row[17] = prescriptionList.get(i).getCategorytable();
             row[18] = prescriptionList.get(i).getReference();
             row[19] = prescriptionList.get(i).getNametable();
             row[20] = prescriptionList.get(i).getJiliang();
             row[21] = prescriptionList.get(i).getPrice();
             row[22] = prescriptionList.get(i).getTotalprice();
             row[23] = prescriptionList.get(i).getCreateDateTime();
             row[24] = prescriptionList.get(i).getLastUpdateDateTime();
             row[25] = prescriptionList.get(i).getDiseaseID();
             row[26] = prescriptionList.get(i).getPrescriptionID();
             row[27] = prescriptionList.get(i).getBillno();
             row[28] = prescriptionList.get(i).getLatest();
             row[29] = prescriptionList.get(i).getInitialWeight();
             model.addRow(row);
         }
    }
    
    public void image()
    {
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JTableHeader tableHeader = tblDisease.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        ImageIcon iconLogo = new ImageIcon(getClass().getResource("/menu/hengsengtong.png"));
        lbllogo.setIcon(iconLogo);
        ImageIcon iconBack = new ImageIcon(getClass().getResource("/menu/smallBack.png"));
        btnBack.setIcon(iconBack);
        ImageIcon iconFind = new ImageIcon(getClass().getResource("/menu/smallFind.png"));
        btnFind.setIcon(iconFind);
        ImageIcon iconHeader = new ImageIcon(getClass().getResource("/menu/findmedium.png"));
        findHeader.setIcon(iconHeader);
        this.lblName.setText(userid);
        setResizable(false);
    }
    
    public void color_table()
    {
        tblDisease.setDefaultRenderer(Object.class, new PriorityCellRenderer());
        tblDisease.getTableHeader().setReorderingAllowed(false);
    }
    
    //change the colour
    public class PriorityCellRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            int latest = Integer.parseInt(table.getValueAt(row, 28).toString());
            
            if (latest ==  0) {
                setBackground(new Color(254, 115, 63));  // or background
            }
            else
            {
                setBackground(new Color(151, 254, 63));  // or background
            }
            return this;
        }
    }
    
    public void widthTable()
    {
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JTableHeader tableHeader = tblDisease.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        tblDisease.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumnModel columnModel = tblDisease.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(200);
        columnModel.getColumn(2).setPreferredWidth(200);
        columnModel.getColumn(3).setPreferredWidth(160);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(200);
        columnModel.getColumn(6).setPreferredWidth(1000);
        columnModel.getColumn(7).setPreferredWidth(200);
        columnModel.getColumn(8).setPreferredWidth(200);
        columnModel.getColumn(9).setPreferredWidth(200);
        columnModel.getColumn(10).setPreferredWidth(200);
        columnModel.getColumn(11).setPreferredWidth(200);
        columnModel.getColumn(12).setPreferredWidth(200);
        columnModel.getColumn(13).setPreferredWidth(200);
        columnModel.getColumn(14).setPreferredWidth(100);
        columnModel.getColumn(15).setPreferredWidth(100);
        columnModel.getColumn(16).setPreferredWidth(100);
        columnModel.getColumn(17).setPreferredWidth(200);
        columnModel.getColumn(18).setPreferredWidth(100);
        columnModel.getColumn(19).setPreferredWidth(200);
        columnModel.getColumn(20).setPreferredWidth(100);
        columnModel.getColumn(21).setPreferredWidth(100);
        columnModel.getColumn(22).setPreferredWidth(200);
        columnModel.getColumn(23).setPreferredWidth(200);
        columnModel.getColumn(24).setPreferredWidth(200);
        columnModel.getColumn(25).setPreferredWidth(200);
        columnModel.getColumn(26).setPreferredWidth(200);
        columnModel.getColumn(27).setPreferredWidth(100);
        columnModel.getColumn(28).setPreferredWidth(50);
        columnModel.getColumn(29).setPreferredWidth(50);
        columnModel.getColumn(28).setMinWidth(0);
        columnModel.getColumn(28).setMaxWidth(0);
        columnModel.getColumn(29).setMinWidth(0);
        columnModel.getColumn(29).setMaxWidth(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchDiseasePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchDiseasePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchDiseasePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchDiseasePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchDiseasePatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFind;
    private javax.swing.JLabel findHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JTable tblDisease;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBill;
    private javax.swing.JTextField txtBlood;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtIC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJiliang;
    private javax.swing.JTextField txtMediCategory;
    private javax.swing.JTextField txtMediName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtReference;
    private javax.swing.JTextField txtShit;
    private javax.swing.JTextField txtSymptom;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTongueCoating;
    private javax.swing.JTextField txtTongueQuality;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import javaClass.User;
import javaClass.Disease;
import java.awt.Font;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javaClass.PrintTemplate;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Sheng
 */
public class ModifyDisease extends javax.swing.JFrame {

    /**
     * Creates new form ModifyDisease
     */
    private User user;
    List<Disease> disease;
    DefaultTableModel model;
    private String ID;
    private String IC;
    private String Name;
    private String Phone;
    private String DiseaseID;
    private String Symptom;
    private String Category;
    private String PulseCondition;
    private String TongueQuality;
    private String TongueCoating;
    private String PeeShit;
    private String History;
    private String Temperature;
    private String BloodPressure;
    private String from;
    private String to;
    private String initialIC;
    private String initialID;
    private int option = 0;        
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate localDate = LocalDate.now();
    private String userid="";
    
    public ModifyDisease() {
        initComponents();
    }
    
    public ModifyDisease(User user) throws SQLException {
        initComponents();
        this.user = user;
        userid = user.getUserid();
        show_Disease();
        widthTable();
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        disabledTextBox();
        txtDiseaseID.setVisible(false);
        image();
    }
    
    public ModifyDisease(User user,String ID, String IC, String Name, String Phone,String DiseaseID, String Symptom, String Category, String PulseCondition, String TongueQuality, String TongueCoating, String PeeShit, String History, String Temperature, String BloodPressure, String from, String to, String initialIC, String initialID, int option) throws SQLException {
        initComponents();
        this.user = user;
        this.ID = ID;
        this.IC = IC;
        this.Name = Name;
        this.Phone = Phone;
        this.DiseaseID = DiseaseID;
        this.Symptom = Symptom;
        this.Category = Category;
        this.PulseCondition = PulseCondition;
        this.TongueQuality = TongueQuality;
        this.TongueCoating = TongueCoating;
        this.PeeShit = PeeShit;
        this.History = History;
        this.Temperature = Temperature;
        this.BloodPressure = BloodPressure;
        this.from = from;
        this.to = to;
        this.initialIC = initialIC;
        this.initialID = initialID;
        this.option = option;
        userid = user.getUserid();
        show_Disease();
        widthTable();
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        txtIC.setEnabled(false);
        txtID.setEnabled(false);
        btnFindIC.setEnabled(false);
        btnFindID.setEnabled(false);
        txtIC.setText(IC);
        txtID.setText(ID);
        txtName.setText(Name);
        txtPhone.setText(Phone);
        txtSymptom.setText(Symptom);
        txtCategory.setText(Category);
        txtPulse.setText(PulseCondition);
        txtTongueQuality.setText(TongueQuality);
        txtTongueCoating.setText(TongueCoating);
        txtShit.setText(PeeShit);
        txtHistory.setText(History);
        txtTemperature.setText(Temperature);
        txtBlood.setText(BloodPressure);
        disabledTextBox();
        txtDiseaseID.setVisible(false);
        btnReset.setVisible(false);
        image();
        /*tblDisease.setAutoResizeMode(tblDisease.AUTO_RESIZE_OFF);
        new JScrollPane(tblDisease, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        */
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        txtDiseaseID = new javax.swing.JTextField();
        panelHeader = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        panelBody = new javax.swing.JPanel();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtBlood = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtHistory = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTongueCoating = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtShit = new javax.swing.JTextField();
        txtTongueQuality = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        txtSymptom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtIC = new javax.swing.JTextField();
        btnFindIC = new javax.swing.JButton();
        btnFindID = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisease = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 252, 720, 0);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(280, 20, 0, 110);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(280, 20, 0, 120);

        txtDiseaseID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtDiseaseID);
        txtDiseaseID.setBounds(370, 70, 250, 20);

        panelHeader.setBackground(new java.awt.Color(255, 204, 204));
        panelHeader.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelHeader.setForeground(new java.awt.Color(153, 153, 153));
        panelHeader.setLayout(null);
        panelHeader.add(lbllogo);
        lbllogo.setBounds(14, 2, 231, 70);

        jLabel15.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel15.setText("更改病症");
        panelHeader.add(jLabel15);
        jLabel15.setBounds(873, -1, 180, 70);

        jLabel17.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel17.setText("登入：");
        panelHeader.add(jLabel17);
        jLabel17.setBounds(1651, 5, 100, 60);

        lblName.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        panelHeader.add(lblName);
        lblName.setBounds(1758, -1, 160, 70);

        getContentPane().add(panelHeader);
        panelHeader.setBounds(0, 0, 1940, 70);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("CopyRight © Heng Seng Tong");
        jPanel1.add(jLabel18);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 940, 1940, 50);

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setLayout(null);

        btnModify.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnModify.setText("更新");
        btnModify.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        panelBody.add(btnModify);
        btnModify.setBounds(610, 740, 140, 50);

        btnDelete.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnDelete.setText("删除");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelBody.add(btnDelete);
        btnDelete.setBounds(460, 740, 140, 50);

        btnReset.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnReset.setText(" 重启");
        btnReset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        panelBody.add(btnReset);
        btnReset.setBounds(160, 740, 140, 50);

        btnBack.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBack.setText("退出");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        panelBody.add(btnBack);
        btnBack.setBounds(20, 740, 130, 50);

        jLabel12.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel12.setText("体温：");
        panelBody.add(jLabel12);
        jLabel12.setBounds(80, 620, 60, 40);

        txtTemperature.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtTemperature);
        txtTemperature.setBounds(140, 620, 200, 40);

        jLabel13.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel13.setText("血压：");
        panelBody.add(jLabel13);
        jLabel13.setBounds(360, 620, 60, 40);

        txtBlood.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtBlood);
        txtBlood.setBounds(420, 620, 220, 40);

        jLabel11.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel11.setText("病史：");
        panelBody.add(jLabel11);
        jLabel11.setBounds(80, 560, 60, 40);

        txtHistory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtHistory);
        txtHistory.setBounds(140, 560, 500, 40);

        jLabel9.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel9.setText("舌苔：");
        panelBody.add(jLabel9);
        jLabel9.setBounds(80, 500, 57, 40);

        txtTongueCoating.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtTongueCoating);
        txtTongueCoating.setBounds(140, 500, 200, 40);

        jLabel10.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel10.setText("大小便：");
        panelBody.add(jLabel10);
        jLabel10.setBounds(350, 500, 76, 40);

        txtShit.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtShit);
        txtShit.setBounds(420, 500, 220, 40);

        txtTongueQuality.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtTongueQuality);
        txtTongueQuality.setBounds(420, 440, 220, 40);

        jLabel8.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel8.setText("舌质：");
        panelBody.add(jLabel8);
        jLabel8.setBounds(370, 440, 60, 40);

        txtPulse.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtPulse);
        txtPulse.setBounds(140, 440, 200, 40);

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel3.setText("脉象：");
        panelBody.add(jLabel3);
        jLabel3.setBounds(80, 440, 60, 40);

        jLabel6.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel6.setText("病症分类:");
        panelBody.add(jLabel6);
        jLabel6.setBounds(50, 380, 90, 40);

        txtCategory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtCategory);
        txtCategory.setBounds(140, 380, 500, 40);

        txtSymptom.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtSymptom);
        txtSymptom.setBounds(140, 320, 500, 40);

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel1.setText("主症：");
        panelBody.add(jLabel1);
        jLabel1.setBounds(80, 320, 60, 40);
        panelBody.add(jSeparator3);
        jSeparator3.setBounds(50, 290, 650, 10);

        jLabel7.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel7.setText("电话号码：");
        panelBody.add(jLabel7);
        jLabel7.setBounds(50, 230, 100, 40);

        txtPhone.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtPhone);
        txtPhone.setBounds(140, 230, 500, 40);

        jLabel2.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel2.setText("名字：");
        panelBody.add(jLabel2);
        jLabel2.setBounds(90, 170, 70, 40);

        txtName.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtName);
        txtName.setBounds(140, 170, 500, 40);

        jLabel5.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel5.setText("IC:");
        panelBody.add(jLabel5);
        jLabel5.setBounds(90, 50, 30, 40);

        txtIC.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtIC);
        txtIC.setBounds(130, 50, 260, 40);

        btnFindIC.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFindIC.setText("寻找");
        btnFindIC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFindIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindICActionPerformed(evt);
            }
        });
        panelBody.add(btnFindIC);
        btnFindIC.setBounds(250, 100, 140, 50);

        btnFindID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFindID.setText("寻找");
        btnFindID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFindID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindIDActionPerformed(evt);
            }
        });
        panelBody.add(btnFindID);
        btnFindID.setBounds(500, 100, 140, 50);

        txtID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtID);
        txtID.setBounds(430, 50, 210, 40);

        jLabel4.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel4.setText("ID:");
        panelBody.add(jLabel4);
        jLabel4.setBounds(400, 50, 25, 40);

        tblDisease.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        tblDisease.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "病人ID", "IC", "名字", "电话号码", "主症", "病症分类", "脉象", "舌质", "舌苔", "大小便", "病史", "体温", "血压", "创建时间", "更新时间", "病症ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDisease.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDisease.setRowHeight(25);
        tblDisease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiseaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisease);

        jScrollPane3.setViewportView(jScrollPane1);

        panelBody.add(jScrollPane3);
        jScrollPane3.setBounds(760, 40, 990, 750);

        btnPrint.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnPrint.setText("打印");
        btnPrint.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        panelBody.add(btnPrint);
        btnPrint.setBounds(310, 740, 140, 50);

        getContentPane().add(panelBody);
        panelBody.setBounds(100, 90, 1770, 820);

        setBounds(0, 0, 1957, 1037);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindICActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_btnFindICActionPerformed

    private void btnFindIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindIDActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_btnFindIDActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if(option == 5)
        {
            try {
                ViewDiseaseDetail detail = new ViewDiseaseDetail(user,from,to,initialIC,initialID);
                detail.setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        else if(option == 8) //back to searchdiseasepatient
        {
            try {
                SearchDiseasePatient menu = new SearchDiseasePatient(user);
                menu.setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        else
        {
            DiseaseMenu menu = new DiseaseMenu(user);
            menu.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        if(validateTextBox())
        {
            try {
                Disease disease = new Disease(txtSymptom.getText(),Integer.parseInt(txtTemperature.getText()),txtBlood.getText(),
                        txtPulse.getText(),txtTongueQuality.getText(),txtTongueCoating.getText(),txtShit.getText(),txtCategory.getText(),
                        txtHistory.getText(),txtID.getText(),txtDiseaseID.getText(),userid);
                String result = disease.EditDisease();
                if(result.equalsIgnoreCase("1"))
                {
                    JOptionPane.showMessageDialog(rootPane, "更改成功！");
                    model.setRowCount(0);
                    show_Disease();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, result);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "ModifyDisease.btnModifyActionPerformed get error on line 394, "+ ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtIC.setText("");
        txtID.setText("");
        txtSymptom.setText("");
        txtCategory.setText("");
        txtPulse.setText("");
        txtTongueQuality.setText("");
        txtTongueCoating.setText("");
        txtShit.setText("");
        txtHistory.setText("");
        txtTemperature.setText("");
        txtBlood.setText("");
        txtName.setText("");
        txtPhone.setText("");
        txtDiseaseID.setText("");
        txtIC.setEnabled(true);
        txtID.setEnabled(true);
        btnFindIC.setEnabled(true);
        btnFindID.setEnabled(true);
        txtSymptom.setEnabled(false);
        txtCategory.setEnabled(false);
        txtPulse.setEnabled(false);
        txtTongueQuality.setEnabled(false);
        txtTongueCoating.setEnabled(false);
        txtShit.setEnabled(false);
        txtHistory.setEnabled(false);
        txtTemperature.setEnabled(false);
        txtBlood.setEnabled(false);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:
            Disease disease = new Disease(txtDiseaseID.getText(),userid);
            String result = disease.DeleteDisease();
            if(result.equalsIgnoreCase("1"))
            {
                JOptionPane.showMessageDialog(rootPane, "删除成功！");
                model.setRowCount(0);
                show_Disease();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, result);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "ModifyDisease.btnDeleteActionPerformed get error on line 433, "+ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblDiseaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiseaseMouseClicked
        // TODO add your handling code here:
        int index = tblDisease.getSelectedRow();
        TableModel model = tblDisease.getModel();
        String patientID = model.getValueAt(index, 0).toString();
        String IC = model.getValueAt(index,1).toString();
        String Name = model.getValueAt(index,2).toString(); //property
        String Phone = model.getValueAt(index,3).toString();//appliance
        String Symptom = model.getValueAt(index,4).toString();//appliance
        String Category = model.getValueAt(index,5).toString();
        String PulseCondition = model.getValueAt(index,6).toString();
        String TongueQuality = model.getValueAt(index,7).toString();
        String TongueCoating = model.getValueAt(index,8).toString();
        String Shit = model.getValueAt(index,9).toString();
        String History = model.getValueAt(index,10).toString();
        String Temperature = model.getValueAt(index,11).toString();
        String BloodPressure = model.getValueAt(index,12).toString();
        String DiseaseID = model.getValueAt(index, 15).toString();
        
        txtDiseaseID.setText(DiseaseID);
        txtID.setText(patientID);
        txtIC.setText(IC);
        txtName.setText(Name);
        txtPhone.setText(Phone);
        txtSymptom.setText(Symptom);
        txtCategory.setText(Category);
        txtPulse.setText(PulseCondition);
        txtTongueQuality.setText(TongueQuality);
        txtTongueCoating.setText(TongueCoating);
        txtHistory.setText(History);
        txtTemperature.setText(Temperature);
        txtBlood.setText(BloodPressure);
        txtShit.setText(Shit);
        txtIC.setEnabled(false);
        txtID.setEnabled(false);
        btnFindIC.setEnabled(false);
        btnFindID.setEnabled(false);
        
        disabledTextBox();
    }//GEN-LAST:event_tblDiseaseMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        String IC = txtIC.getText();
        String ID = txtID.getText();
        String Name = txtName.getText();
        String Phone = txtPhone.getText();
        String Date = dtf.format(localDate);
        String symptom = txtSymptom.getText();
        String category = txtCategory.getText();
        String pulse = txtPulse.getText();
        String tongueQuality = txtTongueQuality.getText();
        String tongueCoating = txtTongueCoating.getText();
        String shit = txtShit.getText();
        String history = txtHistory.getText();
        String temperature = txtTemperature.getText();  
        String blood = txtBlood.getText();
        
        String bodyContent = printPreview(IC,ID,Name,Phone,Date,symptom,category,pulse,tongueQuality,tongueCoating,shit,history, temperature, blood);
        PrintForm main = new PrintForm(user,7,bodyContent);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPrintActionPerformed

    public void Find()
    {
        String IC = txtIC.getText();
        String ID = txtID.getText();
        
        Disease disease = new Disease();
        try {
            if(disease.getPatient(IC,ID,userid).getIC().equalsIgnoreCase(IC) || disease.getPatient(IC,ID,userid).getID().equalsIgnoreCase(ID))
            {   
                String ICdata = disease.getPatient(IC,ID,userid).getIC();
                String IDdata = disease.getPatient(IC,ID,userid).getID();
                txtName.setText(disease.getPatient(IC,ID,userid).getName());
                txtPhone.setText(disease.getPatient(IC,ID,userid).getPhone());
                txtID.setText(IDdata);
                txtIC.setText(ICdata);
                txtDiseaseID.setText(disease.getDisease(ICdata,userid).getDiseaseID());
                txtSymptom.setText(disease.getDisease(ICdata,userid).getSymptom());
                txtCategory.setText(disease.getDisease(ICdata,userid).getCategory());
                txtPulse.setText(disease.getDisease(ICdata,userid).getPulseCondition());
                txtTongueQuality.setText(disease.getDisease(ICdata,userid).getTongueQuality());
                txtTongueCoating.setText(disease.getDisease(ICdata,userid).getTongueCoating());
                txtHistory.setText(disease.getDisease(ICdata,userid).getHistory());
                txtTemperature.setText(String.valueOf(disease.getDisease(ICdata,userid).getTemperature()));
                txtBlood.setText(disease.getDisease(ICdata,userid).getBloodPressure());
                txtShit.setText(disease.getDisease(ICdata,userid).getPeeShit());
                txtIC.setEnabled(false);
                txtID.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "寻找不到病人资料");
                NewPatient detail = new NewPatient(user,IC);
                detail.setVisible(true);
                this.dispose();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "ModifyDisease.Find() get error on line 503, " +ex.getMessage());
        }
    }
    
    
    public void show_Disease() throws SQLException
    {
        Disease disease = new Disease();
        List<Disease> diseaseList = new ArrayList<Disease>();
        Object row[] = new Object[16];
        model = (DefaultTableModel)tblDisease.getModel();
        
        if(option == 0)
        {
            diseaseList = disease.getDiseases(userid);
            for(int i =0; i<diseaseList.size(); i++)
            {
                row[0] = diseaseList.get(i).getPatientID();
                //row[1] = diseaseList.get(i).getDiseaseID();
                row[1] = diseaseList.get(i).getIC();
                row[2] = diseaseList.get(i).getName();
                row[3] = diseaseList.get(i).getPhone();
                row[4] = diseaseList.get(i).getSymptom();
                row[5] = diseaseList.get(i).getCategory();
                row[6] = diseaseList.get(i).getPulseCondition();
                row[7] = diseaseList.get(i).getTongueQuality();
                row[8] = diseaseList.get(i).getTongueCoating();
                row[9] = diseaseList.get(i).getPeeShit();
                row[10] = diseaseList.get(i).getHistory();
                row[11] = diseaseList.get(i).getTemperature();
                row[12] = diseaseList.get(i).getBloodPressure();
                row[13] = diseaseList.get(i).getCreateDateTime();
                row[14] = diseaseList.get(i).getLastUpdateDateTime();
                row[15] = diseaseList.get(i).getDiseaseID();
                model.addRow(row);
            }
        }
        else
        {
            diseaseList = disease.getDiseaseIDPatients(DiseaseID,userid);
            for(int i =0; i<diseaseList.size(); i++)
            {
                row[0] = diseaseList.get(0).getPatientID();
                //row[1] = diseaseList.get(i).getDiseaseID();
                row[1] = IC;
                row[2] = Name;
                row[3] = Phone;
                row[4] = diseaseList.get(i).getSymptom();
                row[5] = diseaseList.get(i).getCategory();
                row[6] = diseaseList.get(i).getPulseCondition();
                row[7] = diseaseList.get(i).getTongueQuality();
                row[8] = diseaseList.get(i).getTongueCoating();
                row[9] = diseaseList.get(i).getPeeShit();
                row[10] = diseaseList.get(i).getHistory();
                row[11] = diseaseList.get(i).getTemperature();
                row[12] = diseaseList.get(i).getBloodPressure();
                row[13] = diseaseList.get(i).getCreateDateTime();
                row[14] = diseaseList.get(i).getLastUpdateDateTime();
                row[15] = diseaseList.get(i).getDiseaseID();
                model.addRow(row);
            }
        }
    }
    
    public void disabledTextBox()
    {
        txtSymptom.setEnabled(true);
        txtCategory.setEnabled(true);
        txtPulse.setEnabled(true);
        txtTongueQuality.setEnabled(true);
        txtTongueCoating.setEnabled(true);
        txtShit.setEnabled(true);
        txtHistory.setEnabled(true);
        txtTemperature.setEnabled(true);
        txtBlood.setEnabled(true);
        
    }
    
    public boolean validateTextBox()
    {
        boolean result = false;
        String IC = txtIC.getText();
        String ID = txtID.getText();
        String symptom = txtSymptom.getText();
        String category = txtCategory.getText();
        String pulse = txtPulse.getText();
        String tonguequality = txtTongueQuality.getText();
        String tonguecoating = txtTongueCoating.getText();
        String shit = txtShit.getText();
        String history = txtHistory.getText();
        int temperature = Integer.parseInt(txtTemperature.getText());
        String blood = txtBlood.getText();
        
        if(IC.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(rootPane, "IC没填！");
        } else if(ID.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(rootPane, "ID没填！");
        } else if (symptom.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "主症没填！");
        } else if (temperature <= 0 && temperature >= 100) {
            JOptionPane.showMessageDialog(rootPane, "体温错误！");
        } else if (blood.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "血压没填！");
        } else if (pulse.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "脉象没填！");
        } else if (tonguequality.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "舌质没填！");
        } else if (tonguecoating.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "舌苔没填！");
        } else if (shit.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "大小便没填！");
        } else if (category.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "病症归类没填！");
        } else if (history.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "病史没填！");
        } else {
            result = true;
        }
        return result;
    }
    
    public void widthTable()
    {
        this.lblName.setText(userid);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JTableHeader tableHeader = tblDisease.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        tblDisease.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        //new JScrollPane(tblMedicine, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        TableColumnModel columnModel = tblDisease.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(70);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(160);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        columnModel.getColumn(6).setPreferredWidth(100);
        columnModel.getColumn(7).setPreferredWidth(100);
        columnModel.getColumn(8).setPreferredWidth(100);
        columnModel.getColumn(9).setPreferredWidth(100);
        columnModel.getColumn(10).setPreferredWidth(100);
        columnModel.getColumn(11).setPreferredWidth(100);
        columnModel.getColumn(12).setPreferredWidth(100);
        columnModel.getColumn(13).setPreferredWidth(200);
        columnModel.getColumn(14).setPreferredWidth(200);
        columnModel.getColumn(15).setPreferredWidth(200);
        columnModel.getColumn(15).setMinWidth(0);
        columnModel.getColumn(15).setMaxWidth(0);
    }
    
    public void image()
    {
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        ImageIcon iconLogo = new ImageIcon(getClass().getResource("/menu/hengsengtong.png"));
        lbllogo.setIcon(iconLogo);
        ImageIcon iconBack = new ImageIcon(getClass().getResource("/menu/smallBack.png"));
        btnBack.setIcon(iconBack);
        ImageIcon iconFind = new ImageIcon(getClass().getResource("/menu/smallFind.png"));
        btnFindIC.setIcon(iconFind);
        btnFindID.setIcon(iconFind);
        ImageIcon iconReset = new ImageIcon(getClass().getResource("/menu/smallReset.png"));
        btnReset.setIcon(iconReset);
        ImageIcon iconDelete = new ImageIcon(getClass().getResource("/menu/smallDelete.png"));
        btnDelete.setIcon(iconDelete);
        ImageIcon iconUpdate = new ImageIcon(getClass().getResource("/menu/smallUpdate.png"));
        btnModify.setIcon(iconUpdate);
        ImageIcon iconModify = new ImageIcon(getClass().getResource("/menu/editmedium.png"));
        jLabel15.setIcon(iconModify);
        ImageIcon iconPrint = new ImageIcon(getClass().getResource("/menu/smallprint.png"));
        btnPrint.setIcon(iconPrint);
        setResizable(false);
    }
    
    public String printPreview(String IC, String ID, String Name, String Phone, String Date,String symptom, String category, String pulse,
                             String tongueQuality, String tongueCoating, String shit, String history, String temperature, 
                             String blood)
    {
        PrintTemplate print = new PrintTemplate();
        return print.printDisease(IC, ID, Name, Phone, Date, symptom, category, pulse, tongueQuality, tongueCoating, shit, history, temperature, blood);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyDisease().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindIC;
    private javax.swing.JButton btnFindID;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JTable tblDisease;
    private javax.swing.JTextField txtBlood;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDiseaseID;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtIC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtShit;
    private javax.swing.JTextField txtSymptom;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTongueCoating;
    private javax.swing.JTextField txtTongueQuality;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import javaClass.Prescription;
import javaClass.Patient;
import javaClass.GrassMedicinePotion;
import javaClass.GrassMedicinePill;
import javaClass.TraditionalMedicinePotion;
import javaClass.TraditionalMedicinePill;
import javaClass.User;
import javaClass.Disease;
import javaClass.Code;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import java.awt.*;
import java.awt.event.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.util.List;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Sheng
 */
public class NewPatientDisease extends javax.swing.JFrame {

    /**
     * Creates new form NewPatientDisease
     */
    private User user;
    private String id;
    private String ic;
    private String name;
    private String phone;
    DefaultTableModel model;
    private String comboBox = "";
    HashMap<String,String> save = new HashMap<String,String>();
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate localDate = LocalDate.now();
        
    public NewPatientDisease(User user) throws SQLException {
        initComponents();
        createColumns();
        this.user = user;
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        medicineCategory();
        FindByMedicineName2(String.valueOf(comboBoxName.getSelectedItem()));
        setResizable(false);
        txtchufang.setText("1");
        txtchufang.setEnabled(false);
        txtPrice.setEnabled(false);
        txtTotalPrice.setEnabled(false);
        image();
        lblCreateDateTime.setText(dtf.format(localDate));
    }
    public NewPatientDisease(User user,String id, String ic, String name, String phone) throws SQLException {
        medicineCategory();
        FindByMedicineName2(String.valueOf(comboBoxName.getSelectedItem()));
        initComponents();
         createColumns();
        this.user = user;
        this.id = id;
        this.ic = ic;
        this.name = name;
        this.phone = phone;
        btnFindIC.setEnabled(false);
        txtName.setEnabled(false);
        txtPhone.setEnabled(false);
        txtIC.setEnabled(false);
        txtIC.setText(ic);
        txtName.setText(name);
        txtPhone.setText(phone);
        lblID.setText(String.valueOf(id));
        setResizable(false);
        model = (DefaultTableModel)tblDisease.getModel();
        txtchufang.setText("1");
        txtchufang.setEnabled(false);
        txtPrice.setEnabled(false);
        txtTotalPrice.setEnabled(false);
        image();
        lblCreateDateTime.setText(dtf.format(localDate));
    }
    public NewPatientDisease() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtIC = new javax.swing.JTextField();
        btnFindIC = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtSymptom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBlood = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTongueQuality = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTongueCoating = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtShit = new javax.swing.JTextField();
        btnAddData = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblCreateDateTime = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnAddRow = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtchufang = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel17 = new javax.swing.JLabel();
        comboBoxMedicine = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        comboBoxName = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtHistory = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        btnFindID = new javax.swing.JButton();
        spinnerJiLiang = new javax.swing.JSpinner();
        panelHeader = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        headerAdd = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisease = new javax.swing.JTable();
        panelBody = new javax.swing.JPanel();

        buttonAdd.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel1.setText("IC:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(380, 100, 27, 40);

        txtIC.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtIC);
        txtIC.setBounds(430, 100, 290, 40);

        btnFindIC.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFindIC.setText("寻找");
        btnFindIC.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFindIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindICActionPerformed(evt);
            }
        });
        getContentPane().add(btnFindIC);
        btnFindIC.setBounds(740, 100, 110, 40);

        jLabel2.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel2.setText("主症：");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(370, 270, 57, 40);

        txtPhone.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtPhone);
        txtPhone.setBounds(430, 200, 370, 40);

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel3.setText("姓名：");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(370, 150, 57, 40);

        txtName.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtName);
        txtName.setBounds(430, 150, 1240, 40);

        jLabel4.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel4.setText("电话号码：");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(330, 200, 100, 40);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(330, 250, 1350, 20);

        txtSymptom.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtSymptom);
        txtSymptom.setBounds(430, 270, 420, 40);

        jLabel5.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel5.setText("体温：");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(370, 420, 60, 40);

        txtTemperature.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtTemperature);
        txtTemperature.setBounds(430, 420, 410, 40);

        jLabel6.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel6.setText("血压：");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(890, 420, 60, 40);

        txtBlood.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtBlood);
        txtBlood.setBounds(950, 420, 720, 40);

        jLabel7.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel7.setText("脉象：");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(370, 320, 57, 40);

        txtPulse.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtPulse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPulseActionPerformed(evt);
            }
        });
        getContentPane().add(txtPulse);
        txtPulse.setBounds(430, 320, 240, 40);

        jLabel8.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel8.setText("舌质：");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(720, 320, 60, 40);

        txtTongueQuality.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtTongueQuality);
        txtTongueQuality.setBounds(780, 320, 240, 40);

        jLabel9.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel9.setText("舌苔：");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(1060, 320, 60, 40);

        txtTongueCoating.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtTongueCoating);
        txtTongueCoating.setBounds(1120, 320, 550, 40);

        jLabel10.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel10.setText("大小便：");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(350, 370, 90, 40);

        txtShit.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtShit);
        txtShit.setBounds(430, 370, 410, 40);

        btnAddData.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnAddData.setText("新增");
        btnAddData.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnAddData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddData);
        btnAddData.setBounds(1540, 880, 120, 40);

        btnBack.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBack.setText("退出");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(320, 880, 110, 40);
        getContentPane().add(lblID);
        lblID.setBounds(40, 50, 0, 0);

        jLabel13.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel13.setText("日期：");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(860, 200, 60, 40);

        lblCreateDateTime.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(lblCreateDateTime);
        lblCreateDateTime.setBounds(910, 200, 760, 40);

        txtID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtID);
        txtID.setBounds(910, 100, 630, 40);

        jLabel14.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel14.setText("ID:");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(870, 100, 40, 40);

        btnAddRow.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnAddRow.setText("添加");
        btnAddRow.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddRow);
        btnAddRow.setBounds(730, 810, 110, 40);

        jLabel11.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel11.setText("病史：");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(890, 370, 60, 40);

        jLabel16.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel16.setText("处方：");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(360, 490, 60, 40);

        txtchufang.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtchufang);
        txtchufang.setBounds(430, 490, 410, 40);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(330, 470, 1350, 20);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(320, 860, 1350, 10);

        jLabel17.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel17.setText("药物种类：");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(330, 540, 100, 40);

        comboBoxMedicine.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        comboBoxMedicine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "复方药粉" }));
        comboBoxMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMedicineActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxMedicine);
        comboBoxMedicine.setBounds(430, 540, 410, 40);

        jLabel18.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel18.setText("药物名称：");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(330, 590, 95, 40);

        comboBoxName.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        comboBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxNameActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxName);
        comboBoxName.setBounds(430, 590, 410, 40);

        jLabel19.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel19.setText("剂量：");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(360, 640, 60, 40);

        jLabel20.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel20.setText("价格/G:");
        getContentPane().add(jLabel20);
        jLabel20.setBounds(330, 690, 100, 40);

        txtPrice.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtPrice);
        txtPrice.setBounds(430, 690, 410, 40);

        txtTotalPrice.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        txtTotalPrice.setText("0.0");
        getContentPane().add(txtTotalPrice);
        txtTotalPrice.setBounds(430, 740, 410, 40);

        jLabel21.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel21.setText("总价值：");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(340, 740, 90, 40);

        txtHistory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtHistory);
        txtHistory.setBounds(950, 370, 720, 40);

        jLabel22.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel22.setText("病症分类：");
        getContentPane().add(jLabel22);
        jLabel22.setBounds(880, 270, 95, 40);

        txtCategory.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        getContentPane().add(txtCategory);
        txtCategory.setBounds(970, 270, 700, 40);

        btnFindID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFindID.setText("寻找");
        btnFindID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFindID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindIDActionPerformed(evt);
            }
        });
        getContentPane().add(btnFindID);
        btnFindID.setBounds(1560, 100, 110, 40);

        spinnerJiLiang.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        spinnerJiLiang.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));
        spinnerJiLiang.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerJiLiangStateChanged(evt);
            }
        });
        getContentPane().add(spinnerJiLiang);
        spinnerJiLiang.setBounds(430, 640, 100, 40);

        panelHeader.setBackground(new java.awt.Color(255, 204, 204));
        panelHeader.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelHeader.setForeground(new java.awt.Color(153, 153, 153));
        panelHeader.setLayout(null);
        panelHeader.add(lbllogo);
        lbllogo.setBounds(14, 2, 231, 70);

        jLabel23.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel23.setText("登入：");
        panelHeader.add(jLabel23);
        jLabel23.setBounds(1651, 2, 75, 70);

        lblName.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        panelHeader.add(lblName);
        lblName.setBounds(1720, 0, 160, 70);

        headerAdd.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        headerAdd.setText("新增病症");
        panelHeader.add(headerAdd);
        headerAdd.setBounds(880, 0, 250, 70);

        getContentPane().add(panelHeader);
        panelHeader.setBounds(0, 0, 1940, 70);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("CopyRight © Heng Seng Tong");
        jPanel1.add(jLabel24);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 940, 1940, 50);

        tblDisease.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        tblDisease.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDisease.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDisease.setRowHeight(25);
        tblDisease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDiseaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisease);

        jScrollPane2.setViewportView(jScrollPane1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(860, 490, 810, 360);

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        getContentPane().add(panelBody);
        panelBody.setBounds(270, 80, 1460, 850);

        setBounds(0, 0, 1955, 1038);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPulseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPulseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPulseActionPerformed

    private void btnFindICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindICActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_btnFindICActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        DiseaseMenu main = new DiseaseMenu(user);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDataActionPerformed
        // TODO add your handling code here:
        try {
            String patientID = txtID.getText();
            String symptom = txtSymptom.getText();
            int temperature = Integer.parseInt(txtTemperature.getText());
            String blood = txtBlood.getText();
            String pulse = txtPulse.getText();
            String tonguequality = txtTongueQuality.getText();
            String tonguecoating = txtTongueCoating.getText();
            String shit = txtShit.getText();
            String category = txtCategory.getText();
            String history = txtHistory.getText();
            HashMap<String,String> map = new HashMap<String,String>();
            int rows=tblDisease.getRowCount();
            
            if (symptom.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "主症没填！");
            } else if (temperature <= 0 && temperature >= 100) {
                JOptionPane.showMessageDialog(rootPane, "体温错误！");
            } else if (blood.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "血压没填！");
            } else if (pulse.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "脉象没填！");
            } else if (tonguequality.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "舌质没填！");
            } else if (tonguecoating.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "舌苔没填！");
            } else if (shit.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "大小便没填！");
            } else if (category.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "病症归类没填！");
            } else if (history.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(rootPane, "病史没填！");
            } else if (rows == 0) {
               JOptionPane.showMessageDialog(null,"一定要添加至少一个资料");
            } 
            else {
                Disease disease = new Disease(symptom, temperature, blood, pulse, tonguequality, 
                                                tonguecoating, shit, category, history, patientID,"");
                try {
                    map = disease.AddDisease();
                    if (map.get("returnMessage").equalsIgnoreCase("1")) {
                        Prescription prescription = new Prescription();
                        HashMap<String,String> prescriptionMap = new HashMap<String,String>();
                        for(int row = 0; row<rows; row++)
                        {
                            String chufang = (String)tblDisease.getValueAt(row, 0);
                            String categorytable = (String)tblDisease.getValueAt(row, 1);
                            String nametable = (String)tblDisease.getValueAt(row, 2);
                            String jiliang = (String)tblDisease.getValueAt(row, 3);
                            String price = (String)tblDisease.getValueAt(row, 4);
                            String totalprice = (String)tblDisease.getValueAt(row, 5);
                            prescriptionMap = prescription.addPrescription(Integer.valueOf(chufang), categorytable, nametable, Integer.valueOf(jiliang), Float.valueOf(price), Float.valueOf(totalprice), patientID, map.get("ID"),"Prescription");
                        }
                        if(prescriptionMap.get("returnMessage").equalsIgnoreCase("1"))
                        {
                            JOptionPane.showMessageDialog(rootPane, "病症已新增！ID 是 "+map.get("ID"));
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "新增失败");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "新增失败");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.btnAddDataActionPerformed get error on line 543,"+ex.getMessage());
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "体温后面不可以有空格/体温不可以放字母！");
        }
    }//GEN-LAST:event_btnAddDataActionPerformed

    private void comboBoxMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMedicineActionPerformed
        try {
            // TODO add your handling code here:
            String name = comboBoxMedicine.getSelectedItem().toString();
            
            medicineName(name);
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.comboBoxMedicineActionPerformed get error on line 609,"+ex.getMessage());
        }
        
    }//GEN-LAST:event_comboBoxMedicineActionPerformed

    private void comboBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxNameActionPerformed

            // TODO add your handling code here:
        FindByMedicineName2(String.valueOf(comboBoxName.getSelectedItem()));

    }//GEN-LAST:event_comboBoxNameActionPerformed

    private void btnFindIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindIDActionPerformed
        // TODO add your handling code here:
        Find();
    }//GEN-LAST:event_btnFindIDActionPerformed

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        // TODO add your handling code here:
        
        if(save.isEmpty())
        {
            saveDataTable();
        }
        else
        {
            if(save.get("medicine").equalsIgnoreCase(comboBoxMedicine.getSelectedItem().toString()) && save.get("name").equalsIgnoreCase(comboBoxName.getSelectedItem().toString()))
            {
                JOptionPane.showMessageDialog(rootPane, "资料已经存在了");
            }
            else
            {
                saveDataTable();
            }
        }
    }//GEN-LAST:event_btnAddRowActionPerformed
    
    public HashMap<String,String> saveDataTable()
    {
        populate(txtchufang.getText(),comboBoxMedicine.getSelectedItem().toString(),comboBoxName.getSelectedItem().toString(),
                     spinnerJiLiang.getValue().toString(),txtPrice.getText(),txtTotalPrice.getText());
        save.put("medicine", comboBoxMedicine.getSelectedItem().toString());
        save.put("name",comboBoxName.getSelectedItem().toString());
        chufang();
        return save;
    }
    
    private void spinnerJiLiangStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerJiLiangStateChanged
        // TODO add your handling code here:
        String jiliang = spinnerJiLiang.getValue().toString();
        float jiliang1 = Float.valueOf(jiliang);
        float totalprice = Float.valueOf(txtPrice.getText());
        float total = jiliang1 * totalprice;
        
        txtTotalPrice.setText(String.valueOf(total));
    }//GEN-LAST:event_spinnerJiLiangStateChanged

    private void tblDiseaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDiseaseMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDiseaseMouseClicked

    private void populate(String chufang, String medicine, String name, String jiliang, String price, String totalPrice)
    {
        model = (DefaultTableModel)tblDisease.getModel();
        String []rowData ={chufang,medicine,name,jiliang,price,totalPrice};
        model.addRow(rowData);
    }
    
    private void createColumns()
    {
        model = (DefaultTableModel) tblDisease.getModel();
        model.addColumn("处方");
        model.addColumn("药物种类");
        model.addColumn("药物名称");
        model.addColumn("剂量");
        model.addColumn("价格/G");
        model.addColumn("总价值");
    }
    
    public void chufang()
    {
        int chufang = Integer.valueOf(txtchufang.getText()) + 1;
        txtchufang.setText(String.valueOf(chufang));
    }
    
    public void Find()
    {
        String IC = txtIC.getText();
        String ID = txtID.getText();
        
        Patient patient = new Patient();
        try {
            if(patient.getPatient(IC,ID).getIC().equalsIgnoreCase(IC) || patient.getPatient(IC,ID).getID().equalsIgnoreCase(ID))
            {    
                txtName.setText(patient.getPatient(IC,ID).getName());
                txtPhone.setText(patient.getPatient(IC,ID).getPhone());
                txtID.setText(patient.getPatient(IC,ID).getID());
                txtIC.setText(patient.getPatient(IC,ID).getIC());
                txtIC.setEnabled(false);
                txtID.setEnabled(false);
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "寻找不到病人资料");
                NewPatient detail = new NewPatient(user,IC);
                detail.setVisible(true);
                this.dispose();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.Find() get error on line 718,"+ex.getMessage());
        }
    }
    
    public void medicineCategory() throws SQLException
    {
        try {
            Code code = new Code();
            
            for(int i = 0; i < code.getComboMedicine().size(); i++)
            {
                if(i != 0)
                {
                    comboBoxMedicine.addItem(code.getComboMedicine().get(i).getCode());
                }
            }
            medicineName(code.getComboMedicine().get(0).getCode());
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.medicineCategory() get error on line 737,"+ex.getMessage());
        }
        
    }
    
    public void medicineName(String name) throws SQLException
    {
        //name
        comboBoxName.removeAllItems();
        if(name.equalsIgnoreCase("单味药粉"))
        {
            TraditionalMedicinePill pill = new TraditionalMedicinePill();
            
            for(int i = 0; i < pill.comboName().size(); i++)
            {
                comboBoxName.addItem(pill.comboName().get(i).getName());
            }
            FindByMedicineName(pill.comboName().get(0).getName());
        }
        else if(name.equalsIgnoreCase("药水"))
        {
            GrassMedicinePotion potion = new GrassMedicinePotion();
            
            for(int i = 0; i < potion.comboName().size(); i++)
            {
                comboBoxName.addItem(potion.comboName().get(i).getName());
            }
            FindByMedicineName(potion.comboName().get(0).getName());
        }
        else if(name.equalsIgnoreCase("药丸"))
        {
            GrassMedicinePill pill = new GrassMedicinePill();
            
            for(int i = 0; i < pill.comboName().size(); i++)
            {
                comboBoxName.addItem(pill.comboName().get(i).getName());
            }
            FindByMedicineName(pill.comboName().get(0).getName());
        }
        else if(name.equalsIgnoreCase("复方药粉"))
        {
            TraditionalMedicinePotion potion = new TraditionalMedicinePotion();
            
            for(int i = 0; i < potion.comboName().size(); i++)
            {
                comboBoxName.addItem(potion.comboName().get(i).getName());
            }
            FindByMedicineName(potion.comboName().get(0).getName());
        }
        
    }
    
    public void FindByMedicineName(String name)
    {
        //String name = (String)comboBoxName.getSelectedItem();
        String medicine = (String)comboBoxMedicine.getSelectedItem();
        System.out.println("name:"+name);
        System.out.println("medicine:"+medicine);
        try
        {
            if(medicine.equalsIgnoreCase("单味药粉"))
            {
                List<TraditionalMedicinePill> medicList = new ArrayList<TraditionalMedicinePill>();
                TraditionalMedicinePill pill = new TraditionalMedicinePill(name);
                medicList = pill.findTraditionalMedicinePillDetails("name", name);
                txtPrice.setText(String.valueOf(medicList.get(0).getSellprice()));
            }
            else if(medicine.equalsIgnoreCase("药水"))
            {
                List<GrassMedicinePotion> medicList = new ArrayList<GrassMedicinePotion>();
                GrassMedicinePotion potion = new GrassMedicinePotion(name);
                medicList = potion.findGrassMedicinePotionDetails("name", name);
                txtPrice.setText(String.valueOf(medicList.get(0).getSellprice()));
            }
            else if(medicine.equalsIgnoreCase("药丸"))
            {
                List<GrassMedicinePill> medicList = new ArrayList<GrassMedicinePill>();
                GrassMedicinePill pill = new GrassMedicinePill();
                medicList = pill.findGrassMedicinePillDetails("name", name);
                txtPrice.setText(String.valueOf(medicList.get(0).getSellprice()));
            }
            else if(medicine.equalsIgnoreCase("复方药粉"))
            {
                List<TraditionalMedicinePotion> medicList = new ArrayList<TraditionalMedicinePotion>();
                TraditionalMedicinePotion potion = new TraditionalMedicinePotion();
                medicList = potion.findTraditionalMedicinePotionDetails("name", name);
                txtPrice.setText(String.valueOf(medicList.get(0).getSellprice()));
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.FindByMedicineName() get error on line 828,"+ex.getMessage());
        }
    }
    
    public void FindByMedicineName2(String name)
    {
        //String name = (String)comboBoxName.getSelectedItem();
        String medicine = (String)comboBoxMedicine.getSelectedItem();
        System.out.println("name:"+name);
        System.out.println("medicine:"+medicine);
        try
        {
            if(medicine.equalsIgnoreCase("单味药粉"))
            {
                TraditionalMedicinePill pill = new TraditionalMedicinePill(name);
                txtPrice.setText(pill.findTraditionalMedicinePillName(name));
            }
            else if(medicine.equalsIgnoreCase("药水"))
            {
                GrassMedicinePotion pill = new GrassMedicinePotion(name);
                txtPrice.setText(pill.findGrassMedicinePotionName(name));
            }
            else if(medicine.equalsIgnoreCase("药丸"))
            {
                GrassMedicinePill pill =new GrassMedicinePill(name);
                txtPrice.setText(pill.findGrassMedicinePillName(name));
            }
            else if(medicine.equalsIgnoreCase("复方药粉"))
            {
                TraditionalMedicinePotion potion = new TraditionalMedicinePotion(name);
                txtPrice.setText(potion.findTraditionalMedicinePotionName(name));
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(rootPane, "NewPatientDisease.FindByMedicineName2() get error on line 863,"+ex.getMessage());
        }
    }
   
    public void image()
    {
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JTableHeader tableHeader = tblDisease.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        ImageIcon iconLogo = new ImageIcon(getClass().getResource("/menu/hengsengtong.png"));
        lbllogo.setIcon(iconLogo);
        ImageIcon iconBack = new ImageIcon(getClass().getResource("/menu/smallBack.png"));
        btnBack.setIcon(iconBack);
        ImageIcon iconAdd = new ImageIcon(getClass().getResource("/menu/addsmall.png"));
        btnAddRow.setIcon(iconAdd);
        btnAddData.setIcon(iconAdd);
        ImageIcon iconFind = new ImageIcon(getClass().getResource("/menu/smallFind.png"));
        btnFindIC.setIcon(iconFind);
        btnFindID.setIcon(iconFind);
        ImageIcon iconHeader = new ImageIcon(getClass().getResource("/menu/addmedium.png"));
        headerAdd.setIcon(iconHeader);
        this.lblName.setText(user.getUserid());
        setResizable(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewPatientDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewPatientDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewPatientDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewPatientDisease.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewPatientDisease().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddData;
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFindIC;
    private javax.swing.JButton btnFindID;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JComboBox<String> comboBoxMedicine;
    private javax.swing.JComboBox<String> comboBoxName;
    private javax.swing.JLabel headerAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblCreateDateTime;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JSpinner spinnerJiLiang;
    private javax.swing.JTable tblDisease;
    private javax.swing.JTextField txtBlood;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtIC;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtShit;
    private javax.swing.JTextField txtSymptom;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTongueCoating;
    private javax.swing.JTextField txtTongueQuality;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtchufang;
    // End of variables declaration//GEN-END:variables
}

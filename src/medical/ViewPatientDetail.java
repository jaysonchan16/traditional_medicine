/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Sheng
 */
public class ViewPatientDetail extends javax.swing.JFrame {

    /**
     * Creates new form ViewPatientDetail
     */
    private User user;
    private String from="";
    private String to="";
    private String initialIC="";
    private int option=0;
    private String initialID = "";
    public ViewPatientDetail() throws SQLException {
        initComponents();
        show_patient();
        JTableHeader tableHeader = tblPatient.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        widthTable();
    }
    
    public ViewPatientDetail(User user, int option) throws SQLException {
        initComponents();
        this.user = user;
        this.option = option;
        show_patient();
        widthTable();
        JTableHeader tableHeader = tblPatient.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        setResizable(false);
        
    }
    
    public ViewPatientDetail(User user,String from,String to, String initialIC, String initialID) throws SQLException {
        initComponents();
        this.user = user;
        this.from = from;
        this.to = to;
        this.initialIC = initialIC;
        this.initialID = initialID;
        show_patient();
        widthTable();
        JTableHeader tableHeader = tblPatient.getTableHeader();
        tableHeader.setFont(new Font("STXihei", Font.BOLD, 18));
        setResizable(false);
         
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnBackup = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "IC", "名字", "性别", "年龄", "电话号码", "地址", "创建时间", "更新时间"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatient);

        btnBackup.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBackup.setText("备用");
        btnBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBack.setText("退出");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnPrint.setText("打印");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(btnBackup, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 891, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBackup, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DefaultTableModel model ;
    private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed
        // TODO add your handling code here:
       
        int nRow = model.getRowCount(), nCol = model.getColumnCount();
        Object columnsName[] = new Object[nCol];
        Object[][] tableData = new Object[nRow][nCol];
        for(int z=0; z< nCol;z++)
        {
            columnsName[z] = model.getColumnName(z);
            System.out.print(model.getColumnName(z));
        }
        
        for (int i = 0 ; i < nRow ; i++){
            for (int j = 0 ; j < nCol ; j++){
                tableData[i][j] = model.getValueAt(i,j);
                System.out.print(tableData[i][j]);
            }
        }
        JTable table = new JTable(tableData,columnsName);
        Excel excel = new Excel();
        try {
            excel.exportToExcel(table, "C:/Users/Sheng/Desktop/test.xlsx");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnBackupActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        if(option == 3){
            PatientDetailMenu menu = new PatientDetailMenu(user);
            menu.setVisible(true);
            this.dispose();
        }
        else
        {
            MonthYearIC menu = new MonthYearIC(user,2);
            menu.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        Excel exl = new Excel();
        exl.Print(tblPatient);
    }//GEN-LAST:event_btnPrintActionPerformed

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        // TODO add your handling code here:
        int index = tblPatient.getSelectedRow();
        TableModel model = tblPatient.getModel();
        String ID = model.getValueAt(index, 0).toString();
        String IC = model.getValueAt(index,1).toString();
        String Name = model.getValueAt(index,2).toString();
        String Gender = model.getValueAt(index,3).toString();
        String Age = model.getValueAt(index,4).toString();
        String Phone = model.getValueAt(index,5).toString();
        String Address = model.getValueAt(index,6).toString();
        String createDateTime = model.getValueAt(index,7).toString();
        String lastUpdateDateTime = model.getValueAt(index,8).toString();
        
        //option = 4 
//        initialPatient is from monthYearIC
        System.out.println(from);
        int option = 4;
        ModifyPatient patient = new ModifyPatient(user,ID,IC,Name,Gender,Age,Phone,Address,createDateTime,lastUpdateDateTime, option, from, to, initialIC, initialID);
        patient.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_tblPatientMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPatientDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPatientDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPatientDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPatientDetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                   
                    new ViewPatientDetail().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewPatientDetail.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void show_patient() throws SQLException{
         Patient patient = new Patient();
         List<Patient> patientList = new ArrayList<Patient>();
         if(option == 3)
         {
             patientList = patient.getPatients();
         }
         else
         {
             patientList = patient.getPatients(from, to, initialIC, initialID);
         }
         
         model = (DefaultTableModel)tblPatient.getModel();
         Object row[] = new Object[9];
         for(int i =0; i<patientList.size(); i++)
         {
             row[0] = patientList.get(i).getID();
             row[1] = patientList.get(i).getIC();
             row[2] = patientList.get(i).getName();
             row[3] = patientList.get(i).getGender();
             row[4] = patientList.get(i).getAge();
             row[5] = patientList.get(i).getPhone();
             row[6] = patientList.get(i).getAddress();
             row[7] = patientList.get(i).getLastUpdateDateTime();
             row[8] = patientList.get(i).getCreateDateTime();
             model.addRow(row);
         }
    }
    
    public void widthTable()
    {
        tblPatient.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        //new JScrollPane(tblMedicine, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        TableColumnModel columnModel = tblPatient.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(200);
        columnModel.getColumn(3).setPreferredWidth(200);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(100);
        columnModel.getColumn(6).setPreferredWidth(70);
        columnModel.getColumn(7).setPreferredWidth(50);
        columnModel.getColumn(8).setPreferredWidth(50);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnPrint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatient;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medical;

import java.sql.SQLException;
import java.util.Properties;
import java.util.Random;
import javaClass.User;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import mail.ConfigUtility;
import mail.EmailUtility;
/**
 *
 * @author Sheng
 */
public class ForgotPassword extends javax.swing.JFrame {

    /**
     * Creates new form ForgotPassword
     */
    int randomCode;
    private ConfigUtility configUtil = new ConfigUtility();
    
    public ForgotPassword() {
        initComponents();
        image();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelHeader = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        panelBody = new javax.swing.JPanel();
        lblPassword = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        panelHeader.setBackground(new java.awt.Color(255, 204, 204));
        panelHeader.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelHeader.setForeground(new java.awt.Color(153, 153, 153));
        panelHeader.setLayout(null);
        panelHeader.add(lbllogo);
        lbllogo.setBounds(0, 0, 231, 70);

        jLabel1.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        jLabel1.setText("寻找密码");
        panelHeader.add(jLabel1);
        jLabel1.setBounds(500, 0, 180, 70);

        lblName.setFont(new java.awt.Font("STXihei", 1, 24)); // NOI18N
        panelHeader.add(lblName);
        lblName.setBounds(1210, 0, 160, 70);

        getContentPane().add(panelHeader);
        panelHeader.setBounds(0, 0, 1370, 70);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setText("CopyRight © Heng Seng Tong");
        jPanel6.add(jLabel25);

        getContentPane().add(jPanel6);
        jPanel6.setBounds(0, 650, 1370, 50);

        panelBody.setBackground(new java.awt.Color(255, 255, 255));
        panelBody.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        panelBody.setLayout(null);

        lblPassword.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(lblPassword);
        lblPassword.setBounds(250, 250, 590, 40);

        txtID.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        panelBody.add(txtID);
        txtID.setBounds(250, 30, 600, 40);

        btnFind.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnFind.setText("寻找密码");
        btnFind.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        panelBody.add(btnFind);
        btnFind.setBounds(710, 410, 130, 50);

        btnBack.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        btnBack.setText("退出");
        btnBack.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        panelBody.add(btnBack);
        btnBack.setBounds(100, 410, 130, 50);

        jLabel3.setFont(new java.awt.Font("STXihei", 1, 18)); // NOI18N
        jLabel3.setText("账号：");
        panelBody.add(jLabel3);
        jLabel3.setBounds(150, 30, 80, 40);

        getContentPane().add(panelBody);
        panelBody.setBounds(90, 90, 970, 510);

        setBounds(0, 0, 1388, 746);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        try {
            FindPassword();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        LoginUI2 login = new LoginUI2();
        login.setVisible(true);
        this.dispose();
    
    }//GEN-LAST:event_btnBackActionPerformed

    public void FindPassword() throws SQLException
    {
        String id = txtID.getText();
        User user= new User(id);
        String password = user.getUser(id).getPassword();
        lblPassword.setText("你的密码是: "+password);
//        Send2();
    }
    
    public void Send2()
    {
        if (!validateFields()) {
                return;
        }
            Random rand = new Random();
            randomCode = rand.nextInt(999999);
            String toAddress = txtID.getText();
            String subject = "Testing";
            String message = "Your reset code is "+randomCode;

            try {
                    Properties smtpProperties = configUtil.loadProperties();
                    EmailUtility.sendEmail(smtpProperties, toAddress, subject, message);

                    JOptionPane.showMessageDialog(this, 
                                    "The e-mail has been sent successfully!");

            } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, 
                                    "Error while sending the e-mail: " + ex.getMessage(),
                                    "Error", JOptionPane.ERROR_MESSAGE);
            }
    }
    
    private boolean validateFields() {
            if (txtID.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, 
                                    "Please enter To address!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                    txtID.requestFocus();
                    return false;
            }

            if (txtID.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, 
                                    "Please enter subject!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                    txtID.requestFocus();
                    return false;
            }

            if (txtID.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, 
                                    "Please enter message!",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                    txtID.requestFocus();
                    return false;
            }

            return true;
	}
    
    public void Send1()
    {
            String userName = "zhongyao2021@gmail.com";
            String password = "brucetan2021";
            String emailSubject = "Reseting Code";
            String emailMessage = "Your reset code is "+randomCode;
            String to = txtID.getText();
            try {
            // Use javamail api, set parameters from registration.properties file
            // set the session properties
            Properties props = System.getProperties();
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.transport.protocol", "smtp");
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.port", "465");
            props.put("mail.smtp.socketFactory.port", "465");
            props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            Session session = Session.getDefaultInstance(props, null);
            // Create email message
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(userName));
            String[] recipientList = to.split(",");
            InternetAddress[] recipientAddress = new InternetAddress[recipientList.length];
            int counter = 0;
            for (String recipient: recipientList) {
                recipientAddress[counter] = new InternetAddress(recipient.trim());
                counter++;
            }
            message.setRecipients(Message.RecipientType.TO, recipientAddress);
            message.setSubject(emailSubject);
            message.setContent(emailMessage, "text/html");
            // Send smtp message
            Transport tr = session.getTransport("smtp");
            tr.connect("smtp.gmail.com", 587, userName, password);
            message.saveChanges();
            tr.sendMessage(message, message.getAllRecipients());
            tr.close();
            JOptionPane.showMessageDialog(null, "code has been send to email");
            } catch (MessagingException e) {
                //return "Error in method sendEmailNotification: " + e;
            }
    }
    
    public void Send()
    {
        try {
            Random rand = new Random();
            randomCode = rand.nextInt(999999);
            String host = "smtp.gmail.com";
            String user = "zhongyao2021@gmail.com";
            String pass = "brucetan2021;";
            String to = txtID.getText();
            String subject = "Reseting Code";
            String message = "Your reset code is "+randomCode;
            boolean sessionDebug = false;
            Properties pros = System.getProperties();
//            pros.put("mail.smtp.starttls.enable", "true");
//            pros.put("mail.smtp.host", "smtp.gmail.com");
//            pros.put("mail.smtp.port", "587");
//            pros.put("mail.smtp.auth", "true");
//            pros.put("mail.smtp.starttls.required", "true");
//            
//            pros.put("mail.smtp.starttls.enable","true");
//            pros.put("mail.smtp.host", "host");
//            pros.put("mail.smtp.port", "587");
//            pros.put("mail.smtp.auth", "true");
//            pros.put("mail.debug", "true"); 


            pros.put("mail.smtp.user",user); 
            pros.put("mail.smtp.host", "smtp.gmail.com"); 
            pros.put("mail.smtp.port", "25"); 
            pros.put("mail.debug", "true"); 
            pros.put("mail.smtp.auth", "true"); 
            pros.put("mail.smtp.starttls.enable","true"); 
            pros.put("mail.smtp.EnableSSL.enable","true");

            pros.setProperty("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");   
            pros.setProperty("mail.smtp.socketFactory.fallback", "false");   
            pros.setProperty("mail.smtp.port", "587");   
            pros.setProperty("mail.smtp.socketFactory.port", "587"); 
            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession = Session.getDefaultInstance(pros,null);
            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(user));
            InternetAddress [] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(subject);
            msg.setText(message);
            Transport transport = mailSession.getTransport("smtp");
            transport.connect(host,user,pass);
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
            JOptionPane.showMessageDialog(null, "code has been send to email");
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void image()
    {
        ImageIcon iconLogo = new ImageIcon(getClass().getResource("/menu/hengsengtong.png"));
        lbllogo.setIcon(iconLogo);
        ImageIcon iconBack = new ImageIcon(getClass().getResource("/menu/smallBack.png"));
        btnBack.setIcon(iconBack);
        ImageIcon iconModify = new ImageIcon(getClass().getResource("/menu/smallFind.png"));
        btnFind.setIcon(iconModify);
        ImageIcon iconHeader = new ImageIcon(getClass().getResource("/menu/password.png"));
        jLabel1.setIcon(iconHeader);
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFind;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JPanel panelBody;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
